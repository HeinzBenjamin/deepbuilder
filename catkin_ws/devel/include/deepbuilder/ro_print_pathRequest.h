// Generated by gencpp from file deepbuilder/ro_print_pathRequest.msg
// DO NOT EDIT!


#ifndef DEEPBUILDER_MESSAGE_RO_PRINT_PATHREQUEST_H
#define DEEPBUILDER_MESSAGE_RO_PRINT_PATHREQUEST_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace deepbuilder
{
template <class ContainerAllocator>
struct ro_print_pathRequest_
{
  typedef ro_print_pathRequest_<ContainerAllocator> Type;

  ro_print_pathRequest_()
    : action()
    , first_way_point_joint_states()
    , last_way_point_joint_states()
    , way_points_cartesian()
    , num_way_points()  {
    }
  ro_print_pathRequest_(const ContainerAllocator& _alloc)
    : action(_alloc)
    , first_way_point_joint_states(_alloc)
    , last_way_point_joint_states(_alloc)
    , way_points_cartesian(_alloc)
    , num_way_points(_alloc)  {
  (void)_alloc;
    }



   typedef std::vector<float, typename ContainerAllocator::template rebind<float>::other >  _action_type;
  _action_type action;

   typedef std::vector<float, typename ContainerAllocator::template rebind<float>::other >  _first_way_point_joint_states_type;
  _first_way_point_joint_states_type first_way_point_joint_states;

   typedef std::vector<float, typename ContainerAllocator::template rebind<float>::other >  _last_way_point_joint_states_type;
  _last_way_point_joint_states_type last_way_point_joint_states;

   typedef std::vector<float, typename ContainerAllocator::template rebind<float>::other >  _way_points_cartesian_type;
  _way_points_cartesian_type way_points_cartesian;

   typedef std::vector<int32_t, typename ContainerAllocator::template rebind<int32_t>::other >  _num_way_points_type;
  _num_way_points_type num_way_points;





  typedef boost::shared_ptr< ::deepbuilder::ro_print_pathRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::deepbuilder::ro_print_pathRequest_<ContainerAllocator> const> ConstPtr;

}; // struct ro_print_pathRequest_

typedef ::deepbuilder::ro_print_pathRequest_<std::allocator<void> > ro_print_pathRequest;

typedef boost::shared_ptr< ::deepbuilder::ro_print_pathRequest > ro_print_pathRequestPtr;
typedef boost::shared_ptr< ::deepbuilder::ro_print_pathRequest const> ro_print_pathRequestConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::deepbuilder::ro_print_pathRequest_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::deepbuilder::ro_print_pathRequest_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace deepbuilder

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': False, 'IsMessage': True, 'HasHeader': False}
// {'shape_msgs': ['/opt/ros/kinetic/share/shape_msgs/cmake/../msg'], 'sensor_msgs': ['/opt/ros/kinetic/share/sensor_msgs/cmake/../msg'], 'moveit_msgs': ['/opt/ros/kinetic/share/moveit_msgs/cmake/../msg'], 'trajectory_msgs': ['/opt/ros/kinetic/share/trajectory_msgs/cmake/../msg'], 'std_msgs': ['/opt/ros/kinetic/share/std_msgs/cmake/../msg'], 'object_recognition_msgs': ['/opt/ros/kinetic/share/object_recognition_msgs/cmake/../msg'], 'octomap_msgs': ['/opt/ros/kinetic/share/octomap_msgs/cmake/../msg'], 'geometry_msgs': ['/opt/ros/kinetic/share/geometry_msgs/cmake/../msg'], 'my_msgs': ['/home/ros/deepbuilder/catkin_ws/src/my_msgs/msg'], 'actionlib_msgs': ['/opt/ros/kinetic/share/actionlib_msgs/cmake/../msg'], 'rosbridge_msgs': ['/opt/ros/kinetic/share/rosbridge_msgs/cmake/../msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::deepbuilder::ro_print_pathRequest_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::deepbuilder::ro_print_pathRequest_<ContainerAllocator> const>
  : FalseType
  { };

template <class ContainerAllocator>
struct IsMessage< ::deepbuilder::ro_print_pathRequest_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::deepbuilder::ro_print_pathRequest_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::deepbuilder::ro_print_pathRequest_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::deepbuilder::ro_print_pathRequest_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::deepbuilder::ro_print_pathRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "16cb147f05ae29049d654390e66585d9";
  }

  static const char* value(const ::deepbuilder::ro_print_pathRequest_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x16cb147f05ae2904ULL;
  static const uint64_t static_value2 = 0x9d654390e66585d9ULL;
};

template<class ContainerAllocator>
struct DataType< ::deepbuilder::ro_print_pathRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "deepbuilder/ro_print_pathRequest";
  }

  static const char* value(const ::deepbuilder::ro_print_pathRequest_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::deepbuilder::ro_print_pathRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "float32[] action\n\
float32[] first_way_point_joint_states\n\
float32[] last_way_point_joint_states\n\
float32[] way_points_cartesian\n\
int32[] num_way_points\n\
";
  }

  static const char* value(const ::deepbuilder::ro_print_pathRequest_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::deepbuilder::ro_print_pathRequest_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.action);
      stream.next(m.first_way_point_joint_states);
      stream.next(m.last_way_point_joint_states);
      stream.next(m.way_points_cartesian);
      stream.next(m.num_way_points);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct ro_print_pathRequest_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::deepbuilder::ro_print_pathRequest_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::deepbuilder::ro_print_pathRequest_<ContainerAllocator>& v)
  {
    s << indent << "action[]" << std::endl;
    for (size_t i = 0; i < v.action.size(); ++i)
    {
      s << indent << "  action[" << i << "]: ";
      Printer<float>::stream(s, indent + "  ", v.action[i]);
    }
    s << indent << "first_way_point_joint_states[]" << std::endl;
    for (size_t i = 0; i < v.first_way_point_joint_states.size(); ++i)
    {
      s << indent << "  first_way_point_joint_states[" << i << "]: ";
      Printer<float>::stream(s, indent + "  ", v.first_way_point_joint_states[i]);
    }
    s << indent << "last_way_point_joint_states[]" << std::endl;
    for (size_t i = 0; i < v.last_way_point_joint_states.size(); ++i)
    {
      s << indent << "  last_way_point_joint_states[" << i << "]: ";
      Printer<float>::stream(s, indent + "  ", v.last_way_point_joint_states[i]);
    }
    s << indent << "way_points_cartesian[]" << std::endl;
    for (size_t i = 0; i < v.way_points_cartesian.size(); ++i)
    {
      s << indent << "  way_points_cartesian[" << i << "]: ";
      Printer<float>::stream(s, indent + "  ", v.way_points_cartesian[i]);
    }
    s << indent << "num_way_points[]" << std::endl;
    for (size_t i = 0; i < v.num_way_points.size(); ++i)
    {
      s << indent << "  num_way_points[" << i << "]: ";
      Printer<int32_t>::stream(s, indent + "  ", v.num_way_points[i]);
    }
  }
};

} // namespace message_operations
} // namespace ros

#endif // DEEPBUILDER_MESSAGE_RO_PRINT_PATHREQUEST_H
